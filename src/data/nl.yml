Skip-To-Content: Spring naar inhoud
Language-Settings: Taalinstellingen
Sidebar-Title: Website Navigatie
Home: Start
Editor: Editor
Download: Download
Donate: Doneren
Start: Aan de slag
Reference: Referentie
Libraries: Programma bibliotheken
Learn: Leer
Examples: Voorbeelden
Books: Boeken
Community: Gemeenschap
Contribute: Meewerken
Forum: Forum
Showcase: Showcase
footerxh1: Dankbetuiging
footer1: 'p5.js wordt geleid door '
footer2: ' en werd gemaakt door '
footer3: '. p5.js is ontwikkeld door een gemeenschap, met ondersteuning door de '
footer4: ' en '
footer5: 'Persoonlijkheid en grafisch ontwerp door '
tagline1: Processing fun times JavaScript quirkiness
tagline2: Processing simplicity times JavaScript flexibility
tagline3: Processing intuition times JavaScript power
tagline4: Processing creativity times JavaScript dynamism
tagline5: Processing community times JavaScript community
tagline6: the power of Processing times the reach of JavaScript
tagline7: The p5.js community stands in solidarity with Black Lives Matter.
home:
  start-creating: Begin te coderen met de p5 Editor!
  p1xh1: Hallo!
  p1x1: >-
    p5.js is een JavaScript programma bibliotheek om creatief mee aan de slag te
    gaan, en is erop gericht om inclusief te zijn en het programmeren
    toegankelijker te maken voor kunstenaars, ontwerpers, educatoren, beginners,
    en eigenlijk iedereen! p5.js is een programma dat het vrije gebruik
    garandeert, en is open source, omdat we geloven dat programma's en de
    middelen om te leren programmeren voor iedereen beschikbaar moeten zijn.
  p1x2: >-
    p5.js stelt je een hele reeks functies ter beschikking om te tekenen in wat
    we hier metaforisch een "schets" noemen. Maar je bent niet beperkt tot het
    tekenen op een canvas. Je kan de hele pagina beschouwen als een schets,
    inclusief HTML5 objecten voor tekst, invoer, video, webcam en geluid.
  p2xh2: Gemeenschap
  p2x1: >-
    Deze gemeenschap bestaat uit mensen van allerlei slag, en is ook solidair en
    inclusief met betrekking tot (gender) identiteit en uiting, seksuele
    oriëntatie, origine, taal, cognitieve typering, dikte, handicap, klasse,
    geloofsovertuiging, cultuur, subcultuur, politieke overtuiging, leeftijd,
    vaardigheid, beroep en achtergrond. Wij erkennen dat niet iedereen de tijd,
    de financiële middelen of mogelijkheden heeft of actief deel te nemen, maar
    we appreciëren en bemoedigen bijdragen allerhande. We bewerkstelligen
    toegang en kansen en willen die ook koesteren. We willen allemaal leren.
  p2x2: 'p5.js is een interpretatie van '
  p2x3: ' voor het web van vandaag. We houden evenementen en opereren met steun van de '
  p2x4: .
  p2x5: 'Leer meer over '
  p2x6: onze gemeenschap
  p2x7: .
  p3xh2: Aan de slag
  p3xp1: 'Maak je eerste schets in de '
  p3xp2: '. Leer meer over tekenen met p5.js op de '
  p3xp3: Aan de slag pagina
  p3xp4: ' en alles dat je kan doen in de '
  p3xp5: Documentatie
  p3xp6: .
  p4xh2: Bijdragen
  p4xp1: 'Er zijn verschillende manieren om bij te dragen aan p5.js:'
  p4xp2: Bijdragen opties
  p4xp3: Deel iets dat je gemaakt hebt!
  p4xp4: Geef een workshop of een les.
  p4xp5: Organiseer een bijeenkomst.
  p4xp6: Draag bij tot de broncode.
  sketch_credits: Tekening
  sketch_info: Hunminjeongeum2020 gemaakt door Seonghyeon Kim
copyright:
  copyright-title: Copyright Informatie
  copyright1: >-
    De p5.js programmabibliotheek is een vrij programma; je kan het verspreiden
    en/of bewerken onder de voorwaarden van
  copyright2: ' zoals gepubliceerd door de Free Software Foundation, version 2.1.'
  copyright3: 'The Reference for the language is under a '
  copyright4: ' license which makes it possible to reuse this content for non-commercial purposes if it is credited.'
get started:
  get-started-title: Aan de slag
  get-started1: >-
    Deze pagina zal je begeleiden in het maken van een p5.js project en je
    eerste tekening.
  get-started2: 'De gemakkelijkste manier om te starten is met de '
  get-started3: p5.js editor
  get-started4: ', je kan de web editor openen en naar beneden scrollen naar je '
  get-started5: Je eerste schets.
  get-started6: >-
    . Als je graag in de desktop versie van p5.js werkt kan je verder scrollen
    naar
  get-started7: 'download instructies,'
  get-started-button: Kopieer
  settingUp-title: p5.js in een editor op je eigen computer gebruiken
  download-title: Download een kopie van de p5.js programmabibliotheek
  hosted-title: Gebruik een gehoste versie van p5.js
  download1: >-
    De gemakkelijkste manier om te starten is met het lege voorbeeld dat bij de
    download zit 
  download2: p5.js volledige
  download3: ' download.'
  download8: 'Na het downloaden moet je een locale server starten. Hiervoor vind je '
  download9: hier
  download10: >-
    instructies. Start je locale server in de map die je gedownload hebt en ga
    in je browser naar 
  download11: 'http://localhost:{jou-poort-nummer}/empty-example'
  download4: >-
    Als je kijkt naar index.html, zal je merken dat het naar het bestand p5.js
    verwijst. Als je graag de "geminificeerde" versie gebruikt (die is
    gecomprimeerd om sneller te laden), verander dan de link naar p5.min.js.
  download5: >-
    Of, je kan naar een p5.js bestand linken dat online beschikbaar is. Alle
    versies van p5.js zijn opgeslagen op een CDN (Content Delivery Network). Je
    kan oudere versies terug vinden in de
  download6: '. In dat geval kan je de link veranderen in:'
  download7: 'Een voorbeeld HTML pagina zou er zo kunnen uitzien:'
  environment-title: Omgeving
  environment1: >-
    Je zal een tekstverwerker nodig hebben om te programmeren op je computer. Je
    kan een 
  environmentlink: 'http://en.wikipedia.org/wiki/Source_code_editor'
  environment2: ' code editor '
  environment3: 'kiezen. Instructies om alles klaar te zetten met '
  environment4: ' zijn hieronder beschreven, een goede keuze van tekstverwerkers is '
  environment5: ' of '
  environment6: >-
    Als je een screen reader gebruikt en niet de p5 web editor, dan is een
    betere keuze
  environment7: ' of '
  environment8: >-
    Open Sublime. Ga naar het Bestand menu, kies Open ga naar de map waar je
    html en Javasript bestanden zijn. Op het zijpaneel vind je de naam van de
    map bovenaan, met een lijst van de bestanden eronder.
  environment9: >-
    Klik op je sketch.js bestand en het in het rechter paneel openen, waar je
    het kan bewerken.
  environment10: p5 begincode geopend in de Sublime editor.
  environment11: >-
    Open het index.html bestand in je standaard browser door erop te klikken, of
    type:
  environment12: 'file:///de/mappen/naar/het/html/bestand'
  environment14: ' (of '
  environment15: 'http://localhost:{jou-poort-nummer}/empty-example'
  environment16: ' als je een plaatselijke server gebruikt)'
  environment13: ' in de adresbalk van je browser.'
  your-first-sketch-title: Je eerste tekening
  your-first-sketch-intro1: 'In de '
  your-first-sketch-intro2: 'https://editor.p5js.org/'
  your-first-sketch-intro3: p5.js web editor
  your-first-sketch-intro4: ' zou je de volgende code moeten vinden:'
  your-first-sketch1: 'Na '
  your-first-sketch2: ' voeg deze code toe: '
  your-first-sketch3: 'Nu zou je code er zo uit moeten zien: '
  your-first-sketch4: >-
    De code die je net toevoegde tekent een ovaal, met het centrum op 50 pixels
    van de linker kant en 50 pixels van de bovenkant, en met en breedte van 80
    pixels.
  your-first-sketch5: Druk bovenaan op play om je code uit te voeren!
  your-first-sketch6: >-
    Als je een screen reader gebruikt, zal je eerst de "accessible outputs" in
    de the p5 online editor moeten aanzetten. In je eigen editor zal je een
    toegankelijkheid programmabibliotheek aan je html moeten toevoegen. Om
    hierover meer te weten, ga naar&#32;
  your-first-sketch7: p5 met een screen reader gebruiken
  your-first-sketch8: 'Als je alles juist hebt getypt zat dit tevoorschijn komen in het venster:'
  your-first-sketch9: >-
    het canvas heeft een cirkel met een breedte en een hoogte van 50 en een
    positie van 80 x en 80 y
  your-first-sketch10: >-
    Als er niets gebeurt, zou het kunnen dat de editor niet begrijpt wat je
    getypt hebt. Als dit gebeurt, zorg dan dat je het voorbeeld van hierboven
    exact gekopieerd hebt: de nummers moeten tussen de haakjes staan met komma's
    ertussen, de lijn moet eindigen met een puntcomma, en je moet ellipse juist
    geschreven hebben.
  your-first-sketch11: >-
    Eén van de moeilijkste dingen wanneer je begint met programmeren is dat je
    grammaticaal zeer nauwkeurig moet zijn. De browser weet niet altijd wat je
    bedoelt, en kan nogal moeilijk doen over de plaats van leestekens. Je zal er
    wel aan gewend geraken als je wat oefent. Onderaan links in de online editor
    vind je de console. Daar kan je berichten vinden om van de editor met
    details over de gevonden fouten.
  your-first-sketch12: >-
    We gaan voort met een tekening die wat leuker is. Bewerk het laatste
    voorbeeld om dit uit te proberen:
  your-first-sketch13: >-
    Deze code maakt een canvas dat 400 pixels breed is een 400 pixeld hoog, en
    tekent dan witte cirkels waaar de muis is. Wanneer één van de muisknoppen
    ingedrukt is, worden de cirkels zwart. Voer de code uit en klik om het te
    testen.
  your-first-sketch14: canvas heeft meerdere cirkels getekend waar de muis was
  first-sketch-heading1: Code voorbeeld met ellipse
  first-sketch-heading2: Opmerking voor screenreader gebruikers
  first-sketch-heading3: Code voorbeeld met interactiviteit
  what-next-title: Wat nu?
  learn1: 'Bekijk de '
  learn2: leer pagina
  learn3: ' en de '
  learn4: voorbeelden pagina
  learn5: ' voor meer.'
  learn6: 'Bekijk '
  learn7: The Coding Train
  learn8: ' en '
  learn9: Kadenze
  learn10: ' video tutorials.'
  reference1: 'Bekijk de '
  reference2: ' reference'
  reference3: ' voor volledige documentatie.'
  learn11: 'Als je p5 met een screenreader wil gebruiken, bekijk dan de '
  learn12: p5 met een screenreader tutorial
  processing-transition1: 'Als je al Processing hebt gebruikt, lees dan de '
  processing-transition2: 'https://github.com/processing/p5.js/wiki/Processing-transition'
  processing-transition3: Processing transition tutorial
  processing-transition4: >-
    om te leren hoe je van Processing naar p5.js kan converteren, and grootste
    verschillen ertussen.
  book1: >-
    Delen van deze tutorial waren overgenomen en bewerkt van het boek  Getting
    started with p5.js, door Lauren McCarthy, Casey Reas, and Ben Fry, O'Reilly
    / Make 2015. Copyright © 2015. All rights reserved. Laatst bewerkt op de
    p5.js bijeenkomst van 2019 voor medewerkers.
download:
  Download: Download
  download-intro: >-
    Welkom! Hoewel deze pagina de titel "Download" heeft, bevat die eigenlijk
    een verzameling links ofwel om de programmabibliotheek te downloaden of om
    ermee online te beginnen werken. We hebben geprobeerd om dingen te ordenen
    om duidelijk te maken wat een beginner eerst zou willen, en wat een ervaren
    programmeur misschien zoekt.
  editor-title: Editor
  p5.js-editor: p5.js Editor
  p5.js-editor-intro: >-
    Deze link verwijst je door naar de online p5.js Editor zodat je meteen aan
    de slag kan met p5.js.
  editor-includes: 'Begin te coderen met de p5.js Editor, geen setup nodig!'
  complete-library-title: Volledige programmabibliotheek
  complete-library-intro1: >-
    Dit is een download die het p5.js bestand bevat, maar ook de p5.sound
    uitbreiding en een voorbeeldproject. Dit bevat geen editor. Bezoek
  complete-library-intro2: Aan de slag
  complete-library-intro3: ' om te leren hoe je een p5.js project start.'
  p5.js-complete: p5.js volledig
  includes-1: 'Bevat:'
  includes-2: 'p5.js, p5.sound.js, and een voorbeeld project'
  includes-3: 'Versie '
  single-files-title: Individuele bestanden
  single-files-intro: >-
    Dit zijn downloads of links naar de p5.js programmabibliotheek. Er is niets
    anders aan toegevoegd.
  single-file: 'Enkel bestand: '
  p5.js-uncompressed: Volledige niet gecomprimeerde versie
  compressed: Gecomprimeerde versie
  link: 'Link: '
  statically-hosted-file: Statisch gehost bestand
  etc-title: Github Bronnen
  older-releases: Vorige versies (oudere releases en changelog)
  github-repository: Code repository (GitHub)
  report-bugs: Meld problemen en fouten
  supported-browsers: 'Ondersteunde browsers '
  support-title: Steun p5.js!
  support-options: Steun Options
  support-1: >-
    We hebben je hulp nodig! p5.js is een vrij programma. We willen onze
    gemeenschap zo open en inclusief mogelijk maken. Je kan dit werk steunen
    door te doneren aan
  support-2: >-
    , de organisatie die p5.js ondersteunt. Jouw donatie zal de ontwikkeling van
    p5.js steunen, en ook de het maken van leermiddelen en tutorials.
  support-3: Fellowships
  support-4: ', en '
  support-5: evenementen
  support-17: >-
    p5.js Medewerkers Conferentie aan de CMU STUDIO for Creative Inquiry in
    Pittsburgh (Image credit: Taeyoon Choi)
  support-18: >-
    Processing Fellow Saskia Freeke is organizing Code Liberation x Processing
    workshops in London (Image credit: Code Liberation Foundation)
  support-19: >-
    Learning to Teach, Teaching to Learn conference with SFPC (Image credit:
    Kira Simon-Kennedy)
  support-20: >-
    Processing Foundation Fellow Cassie Tarakajian's workshop at Code Art Miami
    (Image credit: Christian Arévalo Photography)
  support-21: >-
    Taeyoon Choi and ASL interpretor at Signing Coders p5.js workshop (Image
    credit: Taeyoon Choi)
  support-22: 'Google Summer of Code kickoff (Image credit: Taeyoon Choi)'
  support-23: >-
    Processing Foundation Fellow Cassie Tarakajian's workshop at Code Art Miami
    (Image credit: Christian Arévalo Photography)
  support-24: >-
    Luisa Pereira and Yeseul Song helping facilitate a sign language based p5.js
    workshop led by Taeyoon Choi (Image credit: Taeyoon Choi)
  support-25: >-
    p5.js Contributors Conference at CMU STUDIO for Creative Inquiry in
    Pittsburgh (Image credit: Taeyoon Choi)
  support-26: >-
    Processing Fellow Digital Citizens Lab hosts a panel on STEM teaching at the
    International Center of Photography (Image credit: International Center of
    Photography)
  support-27: >-
    Participants at p5.js workshop in Santiago, Chile, led by Aarón
    Montoya-Moraga (Image credit: Aarón Montoya-Moraga.)
  support-28: >-
    Claire Kearney-Volpe helping facilitate a sign language based p5.js workshop
    led by Taeyoon Choi (Image credit: Taeyoon Choi)
  support-29: >-
    Processing Foundation Fellow DIY Girls run a creative coding program in Los
    Angeles (Image credit: DIY Girls)
  support-30: Processing Fellow Digital Citizens Lab
  support-31: Bicoastal p5.js meetup at UCLA DMA and NYU ITP
  support-32: De Processing Stichting
  support-33: ' was gesticht in 2012 na meer dan tien jaar werk aan de oorspronkelijke Processing software. De stichting heeft als missie om digitale geletterdheid te bevorderen in de visuele kunsten, en visuele geletterdheid in technologie-gerelateerde domeinen — en om deze domeinen toegankelijk te maken voor een divers publiek. Ons doel is om mensen met verschillende interesses en achtergronden de kans te geven om te leren programmeren en om creatieve werken te maken met code, vooral zij die misschien moeilijker hun weg vinden naar deze middelen en informatie.'
  support-17-alt: ''
  support-18-alt: ''
  support-19-alt: ''
  support-20-alt: ''
  support-21-alt: ''
  support-22-alt: ''
  support-23-alt: ''
  support-24-alt: ''
  support-25-alt: ''
  support-26-alt: ''
  support-27-alt: ''
  support-28-alt: ''
  support-29-alt: ''
  support-30-alt: ''
  support-31-alt: ''
learn:
  learn-title: Leer
  teach-title2: Geef les
  learn1: >-
    Deze lessen aan dieper in op bepaalde onderwerpen of bieden een stapsgewijs
    overzicht. Bekijk de 
  learn2: voorbeeld pagina
  learn3: om korte demonstraties van verschillende p5.js onderwerpen.
  introduction-to-p5js-title: Introductie p5.js
  hello-p5js-title: Hallo p5.js
  hello-p5js: >-
    Deze korte video zal je laten kennis maken met de programmabibliotheek en
    wat je ermee kan doen.
  getting-started-title: Aan de slag
  getting-started: >-
    Welkom bij p5.js! <br> Deze inleiding gaat over hoe je met een p5.js project
    start.
  p5js-overview-title: p5.js overzicht
  p5js-overview: Een overzicht van de belangrijkste kenmerken van p5.js.
  p5js-processing-title: p5.js en Processing
  p5js-processing: >-
    De grootste verschillen tussen de twee en hoe je van de ene naar de andere
    converteert.
  p5-screen-reader-title: p5 met een screen reader
  p5-screen-reader: >-
    Hoe je p5 instelt zodat het gemakkelijk met een screen reader gebruikt kan
    worden.
  using-local-server-title: Gebruik een plaatselijke server.
  using-local-server: 'Hoe je op Mac OSX, Windows, of Linux een plaatselijke server opstart.'
  p5js-wiki-title: p5.js wiki
  p5js-wiki: Bijkomende documentatie en lessen die door de gemeenschap zijn toegevoegd
  connecting-p5js-title: Connecting p5.js
  creating-libraries-title: Maak een uitbreiding
  creating-libraries: Een uitbreiding op p5.js maken.
  nodejs-and-socketio-title: node.js en socket.io
  nodejs-and-socketio: 'Een node.js server met p5.js gebruiken, en communicatie via socket.io.'
  programming-topics-title: Programmeer onderwerpen
  beyond-the-canvas-title: Meer dan alleen canvas
  beyond-the-canvas: Andere elementen dan het canvas op de webpagina maken en manipuleren.
  3d-webgl-title: 3D/WebGL
  3d-webgl: Geavanceerde grafische toepassingen maken met p5.js in WEBGL mode.
  color-title: Kleur
  color: Een inleiding over digitale kleur.
  coordinate-system-and-shapes-title: Coördinaat systemen en vormen
  coordinate-system-and-shapes: Teken eenvoudige vormen met behulp van coördinaten.
  interactivity-title: Interactiviteit
  interactivity: Interactiviteit met de muis en het toetsenbord.
  program-flow-title: Program Flow
  program-flow: Introduction to controlling program flow in p5.js.
  curves-title: Curves
  curves: Een inleiding in het gebruik van drie soorten curves in p5.js.
  becoming-a-better-programmer-title: Een betere programmeur worden.
  debugging-title: Problemen aanpakken
  debugging: Gids om problemen op te lossen
  optimizing-title: Optimaliseren van p5.js code
  optimizing: Tips om je code sneller te maken en te optimaliseren.
  test-driven-development-title: Unit testing en ontwikkelen door te testen
  test-driven-development: Wat is unit testing en hoe gebruik je het? Door Andy Timmons.
  contributing-to-the-community-title: Bijdragen aan de gemeenschap
  development-title: Ontwikkeling
  development: Leer hoe je kan bijdragen aan de ontwikkeling van p5.js.
  looking-inside-title: p5 bestuderen
  looking-inside: >-
    Een inleiding over de bestandsstructuur en middelen om mee p5.js te
    ontwikkelen, door Luisa Pereira.
  writing-tutorial-title: Het schrijven van leermiddelen
  writing-tutorial: Een gids om p5.js leermiddelen te schrijven.
  writing-a-tutorial-title: Een gids om bij te dragen met nieuwe p5.js leermiddelen.
  writing-a-tutorial-author: geschreven door Tega Brain.
  writing-a-tutorial-1: >-
    Wij nodigen educatoren en vrijwilligers uit om leermiddelen te maken. Het
    p5js project  is erop gericht om inclusief te zijn en het programmeren
    toegankelijker te maken, en we zijn enthousiast als we allerlei aspecten van
    het ontwikkelen kunnen publiceren. Momenteel hebben we leermiddelen voor p5,
    voor algemene programmeer technieken en over hoe je kan bijdragen aan een
    open source project.
  writing-a-tutorial-2: >-
    We verwelkomen bijdragen van leermiddelen, en dit stappenplan kan je daarbij
    helpen.
  writing-a-tutorial-how-start-title: 'Aan de slag:'
  writing-a-tutorial-how-start-1: >-
    Kijk na dat het onderwerp waarover je wil gaan schrijven al niet reeds
    behandeld is. Er is een 
  writing-a-tutorial-how-start-2: spreadsheet
  writing-a-tutorial-how-start-3: >-
    die een overzicht biedt in de voortgang van de ontwikkelde leermiddelen. Als
    je onderwerp erbij staat, kan je misschien daaraan meewerken. Laat ons iets
    weten dan.
  writing-a-tutorial-how-start-4: >-
    Als je onderwerp er niet bij staat, beschrijf dan je voorstel in een paar
    zinnen en email het naar education@p5js.org.
  writing-a-tutorial-how-prepare-title: 'Hoe je een p5js tutorial voorbereidt om te publiceren:'
  writing-a-tutorial-how-prepare-1: >-
    Als je tutorial klaar is om te publiceren, volg dan aub deze stappen om je
    inhoud klaar te maken voor de p5js website.
  writing-a-tutorial-how-prepare-2: 'Maak de inhoud van je tutorial in een tutorial-naan.hbs bestand met '
  writing-a-tutorial-how-prepare-3: deze basis structuur
  writing-a-tutorial-how-prepare-4: >-
    . Zoals je kan zien in dit bestand, moet het een hoofding bevatten zoals
    hieronder:
  writing-a-tutorial-how-prepare-5: >-
    De map waarin je tutorial is opgeslagen zal in de 'tutorials' map van de
    p5js website geplaatst worden. Het bestand genaamd index.hbs is de
  writing-a-tutorial-how-prepare-6: 'p5.js tutorials startpagina,'
  writing-a-tutorial-how-prepare-7: ' en het test-tutorial.hbs bestand is de test tutorial.'
  writing-a-tutorial-how-prepare-8: 'Alle inhoud moet in de:'
  writing-a-tutorial-how-prepare-9: >-
    tags op de pagina gaan, met gebruik van de &lt;h1&gt; en &lt;h2&gt; hoofding
    tags en de &lt;p&gt; paragraaaf tags zoals je kan zien op de
  writing-a-tutorial-how-prepare-10: test tutorial pagina.
  writing-a-tutorial-how-prepare-11: >-
    Als je tutorial afbeeldingen bevat, moet je die in de 'assets' map plaatsen
    van de p5js website, in src/assets/learn/test-tutorial/images zoals je
    hieronder kan zien.
  writing-a-tutorial-how-prepare-12: 'Om code correct weer te geven in de html, gebruik de tag:'
  writing-a-tutorial-embedding-title: Embedden van p5.js schetsen
  writing-a-tutorial-embedding-1: >-
    Je kan ter illustratie in je tutorial geanimeerde, interactieve, en
    bewerkbare voorbeelden insluiten. Je demonstraties moeten als p5.js schetsen
    worden voorbereid en kunnen op twee manieren in je tutorial worden verwerkt.
  writing-a-tutorial-embedding-2: 'Als het voorbeeld bewerkbaar moet zijn zoals in '
  writing-a-tutorial-embedding-3: de documentatie paginas
  writing-a-tutorial-embedding-4: ' van de p5js site, dan moet de p5 schets met behulp van de p5js widget worden ingesloten. Volg '
  writing-a-tutorial-embedding-5: 'deze gids '
  writing-a-tutorial-embedding-6: 'over hoe je p5js schetsen moet insluiten met de widget geschreven door '
  writing-a-tutorial-embedding-7: . Je kan zo'n resultaat ook zien op de
  writing-a-tutorial-embedding-8: ' test tutorial pagina'
  writing-a-tutorial-embedding-9: .
  writing-a-tutorial-embedding-10: >-
    Als je voorbeeld geanimeerd en/of interactief moet zijn, maar niet
    bewerkbaar, dan moet je de schets in een iframe embedden, zoals hieronder
    beschreven.
  writing-a-tutorial-iframe-title: Insluiten van een p5 schets met en iframe
  writing-a-tutorial-iframe-1: >-
    Een iframe is als het maken van een venster in een webpagina waarin je een
    andere pagina kan verkennen. In dit geval zal het een venster zijn die de
    index.html pagina van je p5.js schets bevat.
  writing-a-tutorial-iframe-2: >-
    Zet je p5 schetsen in de map /src/assets/learn van de p5js website, in een
    map met de naam van je schets zoals je kan zien in de schreenshot. Dit is
    waar je alle afbeeldingen en schetsen waarnaar je verwijst in iframes moeten
    worden opgeslagen.
  writing-a-tutorial-iframe-3: >-
    In de onderliggende mappen van je voorbeelden moet er een sketch.js en een
    embed.html bestand zijn voor je schets.
  writing-a-tutorial-iframe-4: >-
    Zorg dat je embed.html bestand juiste links bevat naar de p5 programma
    bibliotheken van de site. Als je bestandstructuur dezelfde is als hierboven,
    dan moet de link "../../../js/p5.min.js" zijn.
  writing-a-tutorial-iframe-5: >-
    Je kan dan de index bestanden als iframes insluiten in het .hbs bestand
    waarin de inhoud staat. De embed code voor het iframe zal dan zo zijn:
  writing-a-tutorial-iframe-6: 'Het stijlen van het iframe (dit kan direct in de post of in een styleheet):'
  writing-a-tutorial-iframe-7: 'Hier vind je bijvoorbeeld een schets: '
  writing-a-tutorial-iframe-8: 'En hier is het ingesloten in de p5 site met de volgende code:  '
  writing-a-tutorial-iframe-9: >-
    Eén ding dat we nog opmerken, is dat je de grootte van het iframe manueel
    moet bepalen, dus het werkt het beste als dingen een standaard grootte
    hebben.
  writing-a-tutorial-iframe-10: >-
    Merk ook op dat de links naar de p5.js programma bibliotheken niet uitgaan
    van de .eps pagina met alle inhoud, maar in de html pagina die je schets
    weergeeft (in dit geval embed.html).
  writing-a-tutorial-iframe-11: 'Meer informatie over het embedden van p5.js schetsen vind je '
  writing-a-tutorial-embed-iframe-12: hier.
  writing-a-tutorial-finishing-title: Tot slot
  writing-a-tutorial-finishing-1: >-
    Van zodra je klaar bent met het schrijven van je tutorial en je inhoud werd
    goedgekeurd, mag je je bestanden volgens de bovenstaande structuur aan je
    eigen kopie van de p5.js website git repository toevoegen. Je maakt dus een
    "Fork" van de repo, en daarin maak je een nieuwe branch waarop je je
    bestanden toevoegt. Dit sla je op met een commit die je online publiceert.
    Vervolgens kan je een pull request maken in de originele p5.js website git
    repo, zodat we je branch kunnen opnemen en je bijdrage kunnen publiceren!
  writing-a-tutorial-finishing-2: Bedankt!
  color-description1: >-
    Deze tutorial is van het boek Learning Processing door Daniel Shiffman,
    gepubliceerd door Morgan Kaufmann, © 2008 Elsevier Inc. Rechten
    voorbehouden. It was ported to P5 by Kelly Chang. Als je fouten vind of je
    hebt opmerkingen,
  color-description2: ' laat het ons aub weten.'
  color-p1x1: >-
    Wanneer we het in de digitale wereld hebben over een kleur, moeten we heel
    precies zijn. Je kan niet gewoon zeggen, "Hey, kunt ge die cirkel
    blauw-achtig-groen maken?". Kleur is bepaald met een numeriek bereik. Laten
    we met iets gemakkelijk beginnen: zwart en wit of tinten grijs. 0 betekent
    zwart, 255 betekent wit en alles ertussen is een bepaalde tint grijs van
    donker naar licht.
  color-p2x1: 'Door de '
  color-p2x2: ' en '
  color-p2x3: ' functies toe te voegen voor iets wordt getekend, kunnen we de kleur van bepaalde vormen bepalen. Er is ook de functie '
  color-p2x4: ', die de achtergrond een kleur geeft. Hier is een voorbeeldje.'
  color-code1: |-
    background(255);    // Maak achtergrond wit
     stroke(0);          // Maak de rand (stroke) zwart
     fill(150);          // Maak de binnenkant van een vorm (fill) grijs
     rect(50,50,75,100); // Teken een rechthoek
  color-p3x1: 'Stroke of fill kunnen we weglaten met de functie: '
  color-p3x2: ' en '
  color-p3x3: >-
    . Instinctief zouden we met "stroke(0)" kunnen bedoelen dat er geen rand is,
    maar het is belangrijk om te onthouden dat 0 niet niets is, maar de kleur
    zwart. Elimineer ze ook niet allebei, met
  color-p3x4: ' en '
  color-p3x5: ', zal niets verschijnen!'
  color-p4x1: >-
    Bovendien, als we twee vormen tekenen, zal p5.js altijd de meest recente
    stroke en fill gebruiken, als je van onder naar boven leest.
  color-rgb-title: RGB kleur
  color-rgb-p1x1: >-
    Herinner je vingerverven? Door drie hoofdkleuren te mengen kan elke kleur
    gemaakt worden. Je kreeg een modder bruine kleur als je alles door elkaar
    mengde. Des te meer verf je toevoegde, des te donkerder het werd. Digitale
    kleuren worden ook gemengd, maar het werkt anders. Ten eerste zijn de
    hoofdkleuren anders: rood, groen en blauw. Ten tweede: we mengen licht, niet
    verf, waardoor de regels waarmee kleuren combineren anders zijn.
  color-rgb-li1: rood + groen = geel
  color-rgb-li2: rood + blauw = paars
  color-rgb-li3: groen + blauw = cyaan (blauw-groen)
  color-rgb-li4: rood + groen + blauw = wit
  color-rgb-li5: geen kleuren = zwart
  color-rgb-p2x1: >-
    We gingen hier van uit van zo licht mogelijke kleuren, maar je hebt
    natuurlijk een bereik van kleuren beschikbaar, dus als je een beetje rood,
    groen en blauw mengt, dan krijg je grijs. En een beetje rood met een beetje
    blauw is donker paars. Het zou kunnen dat je hier wat gewend aan moet
    worden, maar als je het regelmatig gebruikt wordt het waarschijnlijk snel
    even instinctief als vingerverf. En je kan natuurlijk niet zomaar zeggen:
    "Meng een beetje rood met een beetje blauw.". Je moet een exacte hoeveelheid
    bepalen. De waarden zij zoals bij de grijswaarden in een bereik tussen 0
    (geen kleur) en 255 (zo veel mogelijk kleur), en de volgorde van de
    parameters is rood, groen en blauw. Door te experimenteren zal je het mengen
    van RGB snel gewoon worden. Maar eerst gaan we wat code maken met veel
    voorkomende kleuren.
  color-transparency-title: Kleur transparantie
  color-transparency-p1x1: >-
    Behalve de rood, groen en blauw componenten van elke kleur, is er ook een
    vierde component, genaamd de "alpha" van de kleur. Dat betekent
    doorzichtigheid, wat erg nuttig is wanneer je elementen bovenop elkaar wil
    tekenen waardoor heen je kan kijken. De alfa waarden voor afbeeldingen
    worden het "alfa kanaal van de afbeelding" ("alpha channel") genoemd.
  color-transparency-p2x1: >-
    Het is belangrijk om te beseffen dat pixels nooit letterlijk transparant
    kunnen zijn. Het gaat hier om een handige illusie waarbij kleuren gemengt
    worden. Achter de schermen gebruikt p5.js de kleur nummers en voegt het een
    percentage toe aan andere kleur nummers. (Als je graag een rooskleurige bril
    programmeert kan je hier mee beginnen.)
  color-transparency-p3x1: >-
    Alfa waarden hebben ook een bereik tussen 0 en 255, waarbij 0 volledig
    transparant is en 255 volledig ondoorzichtig.
  color-custom-ranges-title: Eigen kleur bereik
  color-custom-ranges-p1x1: >-
    RGB kleuren met een bereik van 0 tot 255 zijn niet de enige manier om kleur
    te bepalen in p5.js. We kunnen op verschillende manieren over kleur denken.
    En we kunnen het bereik aanpassen naar bijvoorbeeld, van 0 tot 100 of zo
    (als een percentage). Je kan dit doen met een eigen
  color-custom-ranges-p2x1: >-
    De bovenstaande functie zegt: "OK, we beschouwen kleur in termen van rood,
    groen en blauw en het bereik van de waarden is tussen 0 en 100.".
  color-custom-ranges-p3x1: >-
    Hoewel het eigenlijk nooit echt handig is, kan je ook verschillende bereiken
    per kleur bepalen:
  color-custom-ranges-p4x1: >-
    Nu zeggen we "rood waarden gaan van 0 tot 100, groen gaat van 0 tot 500,
    blauw van 0 tot 10, en alfa van 0 tot 255."
  color-custom-ranges-p5x1: >-
    Tot slot kan je kleur ook in HSB modus bepalen. Dat staat voor (hue,
    saturation, brightness). We gaan hier niet te veel in detail, maar HSB werkt
    als volgt:
  color-custom-ranges-li1x1: Hue (tint)
  color-custom-ranges-li1x2: '—Het type kleur, standaard met een bereik van 0 tot 360.'
  color-custom-ranges-li2x1: Saturation (verzadiging)
  color-custom-ranges-li2x2: '—De levendigheid van een kleur, standaard van 0 tot 100.'
  color-custom-ranges-li3x1: Brightness (lichtheid)
  color-custom-ranges-li3x2: '—Hoe licht de kleur is, standaard van 0 tot 100.'
  color-custom-ranges-p6x1: 'Met '
  color-custom-ranges-p6x2: ' kan je je eigen bereik bepalen voor deze waarden. Sommigen hebben liever een 0-360 bereik voor de tint (denk aan 360 graden van een kleuren wiel) en 0-100 voor verzadiging en lichtheid (denk aan percentage).'
  coordinate-system-description1: 'Deze tutorial komt uit het boek '
  coordinate-system-description2: Learning Processing
  coordinate-system-description3: ' door Daniel Shiffman, gepubliceerd door Morgan Kaufmann, © 2008 Elsevier Inc. All rights reserved. Omgezet naar p5.js door Alex Yixuan Xu. Vind je fouten? '
  coordinate-system-description4: laat het ons weten
  coordinate-system-description5: .
  coordinate-system-description-title: Coördinaten en vormen
  coordinate-system-description-p1x1: >-
    Voor we met p5 beginnen programmeren moeten we wat meetkunde opfrissen. Neem
    een blad ruitjes papier en teken een lijn. De kortste afstand tussen twee
    punten is een doodgewone lijn. Laten we daarmee beginnen, met twee punten.
  coordinate-system-description-p2x1: >-
    De bovenstaande figuur toont ons een lijnstuk tussen punt A (1,0) en punt B
    (4,5). Als je aan een vriend zou willen uitleggen hoe die deze lijn moet
    tekenen, zou je zeggen "teken een lijn van het punt één-nul tot het punt
    vier-vijf aub.". Stel je nu even voor dat die vriend een computer is en dat
    je die dezelfde lijn zou willen laten tekenen. Nu zal je commando er zo uit
    zien:
  coordinate-system-description-p3x1: >-
    Zelfs wanneer je de precieze grammaticale regels voor je code niet kent, is
    het bovenstaande wellicht vrij logisch. We voorzien hier een commando (we
    zullen hiernaar verwijzen als "function") aan de machine met de naam "line".
    Bovendien specificeren we hier parameters die beschrijven hoe die lijn
    getekend moet worden, van punt A (1,0) naar punt B (4,5). Als je een regel
    code als een zin beschouwt, is de functie het werkwoord en zijn de
    parameters lijdende voorwerpen. De zin eindigt ook met een puntcomma in
    plaats van een punt.
  coordinate-system-description-p4x1: >-
    Het besef dat een computerscherm niets meer of minder is dan een sjieke vorm
    van ruitjespapier is doorslaggevend. Elke pixel van het scherm is gewoon een
    coördinaat - twee nummers, een "x" (horizontaal) en een "y" (verticaal) -
    die de plaats van een punt bepaalt. En het is onze taak om te bepalen welke
    kleuren en vormen er moeten verschijnen op de pixels bij deze coördinaat.
  coordinate-system-description-p5x1: >-
    Maar er is een verschil. Op het ruitjespapier dat je op school gebruikt voor
    een grafiek (een Cartesiaans assen stelsel) plaats je (0,0) in het centrum,
    is de y-as naar boven gericht en is de x-as naar rechts gericht (oplopende
    getallen). Het assen stelsel voor pixels in een venster op je computer is
    omgekeerd in de richting van de y-as. De oorsprong (0,0) is in de linker
    bovenhoek, en getallen lopen horizontaal op naar rechts en verticaal naar
    beneden.
  coordinate-system-simple-shapes-title: Eenvoudige vormen
  coordinate-system-simple-shapes-p1x1: >-
    Het merendeel van de voorbeelden van p5 programmas zijn visueel. Deze
    voorbeelden komen eigenlijk neer op het tekenen van vormen door het kleuren
    van pixels. Laten we vier eenvoudige vormen beschouwen.
  coordinate-system-simple-shapes-p2x1: >-
    Voor elke vorm willen we eigenlijk te weten komen welke informatie vereist
    is om te plaats en de grootte (en later ook kleur) van die vorm te bepalen
    en hoe p5 die informatie verwacht. In elk van de onderstaande diagrammen
    gaan we uit van een venster met een breedte van 100 pixels en een hoogte van
    100 pixels.
  coordinate-system-simple-shapes-p3x1: 'Een '
  coordinate-system-simple-shapes-p3x2: ' is de eenvoudigste vorm en een goed vertrekpunt. Om een punt te tekenen hebben we enkel een x en een y coördinaat nodig.'
  coordinate-system-simple-shapes-p4x1: 'Een '
  coordinate-system-simple-shapes-p4x2: ' is ook niet zo moeilijk en vereist twee punten: (x1,y1) en (x2,y2):'
  coordinate-system-simple-shapes-p5x1: 'Eens we een '
  coordinate-system-simple-shapes-p5x2: >-
    gaan tekenen worden dingen wat ingewikkelder. In p5 kan je een rechthoek
    bepalen met een coördinaat voor de linker bovenhoek en met de breedte- en
    hoogtemaat.
  coordinate-system-simple-shapes-p6x1: >-
    Een tweede manier om een rechthoek te tekenen kan door het centrum te
    bepalen en de breedte- en hoogtemaat. Als we deze manier verkiezen moeten we
    voor de instructie van de rechthoek eerst de
  coordinate-system-simple-shapes-p6x2: ' modus willen gebruiken. Merk op dat p5 case-sensitive is (hoofdletter gevoelig).'
  coordinate-system-simple-shapes-p7x1: >-
    Tot slot kunnen we ook een rechthoek tekenen met twee punten (de linker
    bovenhoek en de rechter onderhoek). De modus is hier
  coordinate-system-simple-shapes-p7x2: >-
    . Merk op dat dit voorbeeld hetzelfde resultaat geeft op het scherm dan het
    voorbeeld erboven.
  coordinate-system-simple-shapes-p8x1: >-
    Ok. Eens we het concept van het tekenen van een rechthoek onder de knie
    hebben, dan is 
  coordinate-system-simple-shapes-p8x2: ' gemakkelijk. In feite is dat identiek aan '
  coordinate-system-simple-shapes-p8x3: ' met dat verschil dat een ovaal wordt getekend waar de rechthoek zou zijn. De standaard modus voor een '
  coordinate-system-simple-shapes-p8x4: ' is '
  coordinate-system-simple-shapes-p8x5: ', in tegenstelling tot '
  coordinate-system-simple-shapes-p8x6: .
  coordinate-system-simple-shapes-p9x1: >-
    Laten we nu wat meer volledige code bekijken met vormen en met een canvas
    van 200 op 200 pixels. Let op de createCanvas() functie om de breedte en de
    hoogte van het canvas te bepalen.
  teach-desc: 'Geef een p5 workshop of les, of maak leermiddelen!'
test-tutorial: null
libraries:
  Libraries: Libraries
  core-libraries: Core Libraries
  community-libraries: Community Libraries
  libraries-created-by: 'Created by:'
  p5.sound: >-
    p5.sound extends p5 with Web Audio functionality including audio input,
    playback, analysis and synthesis.
  p5.accessibility: >-
    p5.accessibility makes the p5 canvas more accessible to people who are blind
    and visually impaired.
  asciiart: >-
    p5.asciiart is a simple and easy to use image - to - ASCII art converter for
    p5js.
  p5.ble: >-
    A Javascript library that enables communication between BLE devices and p5
    sketches.
  p5.bots: >-
    With p5.bots you can interact with your Arduino (or other microprocessor)
    from within the browser. Use sensor data to drive a sketch; use a sketch to
    drive LEDs, motors, and more!
  p5.clickable: 'Event driven, easy-to-use button library for p5.js.'
  p5.cmyk.js: CMYK ColorSpace
  p5.collide2D: >-
    p5.collide2D provides tools for calculating collision detection for 2D
    geometry with p5.js.
  p5.createloop: Create animation loops with noise and GIF exports in one line of code.
  p5.dimensions: >-
    p5.dimensions extends p5.js' vector functions to work in any number of
    dimensions.
  p5.EasyCam: >-
    Simple 3D camera control with inertial pan, zoom, and rotate. Major
    contributions by Thomas Diewald.
  p5.experience: >-
    Extensive library for p5.js that adds additional event-listening
    functionality for creating canvas-based web applications.
  p5.func: >-
    p5.func is a p5 extension that provides new objects and utilities for
    function generation in the time, frequency, and spatial domains.
  p5.geolocation: >-
    p5.geolocation provides techniques for acquiring, watching, calculating, and
    geofencing user locations for p5.js.
  p5.gibber: p5.gibber provides rapid music sequencing and audio synthesis capabilities.
  grafica.js: >-
    grafica.js lets you add simple but highly configurable 2D plots to your
    p5.js sketches.
  p5.gui: p5.gui generates a graphical user interface for your p5.js sketches.
  p5.localmessage: >-
    p5.localmessage provides a simple interface to send messages locally from
    one sketch to another for easy multi-window sketching!
  marching: 'Raster to vector conversion, isosurfaces.'
  mappa: >-
    Mappa provides a set of tools for working with static maps, tile maps, and
    geo-data. Useful when building geolocation-based visual representations.
  ml5.js: >-
    ml5.js builds on Tensorflow.js and provides friendly access to machine
    learning algorithms and models in the browser.
  p5.play: >-
    p5.play provides sprites, animations, input and collision functions for
    games and gamelike applications.
  p5.particle: >-
    The Particle and Fountain objects can be used to create data-driven effects
    that are defined through user structures or JSON input and user-draw
    functions.
  p5.Riso: >-
    p5.Riso is a library for generating files suitable for Risograph printing.
    It helps turn your sketches into multi-color prints.
  rita.js: >-
    RiTa.js provides a set of natural language processing objects for generative
    literature.
  Rotating knobs: Make knobs you can rotate with custom graphics and return value ranges.
  p5.scenemanager: >-
    p5.SceneManager helps you create sketches with multiple states / scenes.
    Each scene is a like a sketch within the main sketch.
  p5.screenPosition: Adds the screenX and screenY functionality from Processing to P5js.
  p5.scribble: >-
    Draw 2D primitives in a sketchy look. Created by Janneck Wullschleger, based
    on a port of the original Processing library
  p5.serial: >-
    p5.serial enables serial communication between devices that support serial
    (RS-232) and p5 sketches running in the browser.
  Shape5: >-
    Shape5 is a 2D primative library for elementary students who are learning to
    code for the first time.
  p5.shape.js: A library built to add more simple shapes to the p5.js framework.
  p5.speech: >-
    p5.speech provides simple, clear access to the Web Speech and Speech
    Recognition APIs, allowing for the easy creation of sketches that can talk
    and listen.
  p5.start2d.js: 'p5 extension for 2D static art using px, mm, cm or inches'
  p5.tiledmap: >-
    p5.tiledmap provides drawing and helper functions to include maps in your
    sketches.
  p5.touchgui: A multi-touch and mouse GUI Library for p5.js.
  tramontana: >-
    Tramontana is a platform for easily use many devices (iOS, Android,
    tramontana Board, ...) to create interactive environments, interactive
    spaces or just prototype experiences at scale and in space.
  vida: >-
    Vida is a simple library that adds camera (or video) based motion detection
    and blob tracking functionality to p5js.
  p5.voronoi: >-
    p5.voronoi provides a set of tools to draw and utilize voronoi diagrams in
    your p5.js sketches.
  p5.xr: A library for creating VR and AR sketches with p5.
  p5.3D: 3D Text and Images in WebGL.
  using-a-library-title: Gebruik een programmabibliotheek
  using-a-library1: >-
    Een p5.js programmabibliotheek kan eender welke Javascript code zijn die een
    uitbreiding of een toevoeging is aan de p5.js functionaliteit. Er zijn twee
    categorieën: Core libraries (
  using-a-library3: >-
    ) maken deel uit van de p5.js distributie; de anderen zijn ontwikkeld door
    de p5.js gemeenschap.
  using-a-library4: >-
    Om een programmabibliotheek aan je schets toe te voegen moet je een link
    toevoegen in je HTML bestand, nadat je p5.js gelinkt hebt. Een voorbeeld
    HTML bestand kan er zo uitzien:
  create-your-own-title: Create Your Own
  create-your-own1: p5.js welcomes libraries contributed by others! Check out the
  create-your-own2: libraries tutorial
  create-your-own3: for more specifics about how to create one.
  create-your-own4: >-
    If you have created a library and would like to have it included on this
    page, submit this form!
community:
  community-title: Gemeenschap
  community-statement-title: p5.js gemeenschap verklaring
  community-statement1: >-
    p5.js is een gemeenschap geïnteresseerd in het verkennen en het realiseren
    van kunst en ontwerp met technologie.
  community-statement2: >-
    Deze gemeenschap bestaat uit mensen van allerlei slag, en is ook solidair en
    inclusief met betrekking tot (gender) identiteit en uiting, seksuele
    oriëntatie, origine, taal, cognitieve typering, dikte, handicap, klasse,
    geloofsovertuiging, cultuur, subcultuur, politieke overtuiging, leeftijd,
    vaardigheid, beroep en achtergrond. Wij erkennen dat niet iedereen de tijd,
    de financiële middelen of mogelijkheden heeft of actief deel te nemen, maar
    we appreciëren en bemoedigen bijdragen allerhande. We bewerkstelligen
    toegang en kansen en willen die ook koesteren. We willen allemaal leren.
  community-statement3: >-
    We houden van deze hashtags: #noCodeSnobs (want we waarderen de gemeenschap
    meer dan efficiëntie) #newKidLove (omdat we allemaal welleens ergens moesten
    beginnen), #unassumeCore (omdat de niet zomaar uitgaan van voorkennis), en
    #BlackLivesMatter (want uiteraard).
  in-practice-title: 'In de praktijk:'
  in-practice1: ' We zijn geen code snobs. We gaan niet uit van voorkennis en suggereren niet dat er dingen zijn die iemand moet weten. '
  in-practice2: >-
    We staan erop dat er actief wordt deelgenomen in het verzoek naar feedback
    ongeacht de complexiteit.
  in-practice3: >-
    We verwelkomen nieuwkomers en geven voorrang aan onderwijs voor anderen. We
    streven ernaar om alle taken met het enthousiasme van een nieuwkomer te
    benaderen. Omdat we geloven dat nieuwkomers net zo waardevol zijn in deze
    inspanning dan experten.
  in-practice4: >-
    We zijn consistent in de inspanning voor het actief erkennen en valideren
    van meerdere soorten bijdragen.
  in-practice5: We zijn altijd bereid om te helpen of te begeleiden.
  in-times-conflict-title: 'In times of conflict:'
  in-times-conflict1: We listen.
  in-times-conflict2: We clearly communicate while acknowledging other's feelings.
  in-times-conflict3: >-
    We admit when we're wrong, apologize, and accept responsibility for our
    actions.
  in-times-conflict4: We are continuously seeking to improve ourselves and our community.
  in-times-conflict5: We keep our community respectful and open.
  in-times-conflict6: We make everyone feel heard.
  in-times-conflict7: We are mindful and kind in our interactions.
  in-the-future-title: 'In the future:'
  in-the-future1: The future is now.
  notes-title: Notes
  notes1: 'Please also visit our '
  notes2: p5.js Code of Conduct
  notes3: '. The p5.js Community Statement is licensed under a '
  notes4: Creative Commons license
  notes5: . Please feel free to share and remix with attribution.
  contribute-title: Contribute
  contribute1: >-
    Our community is always looking for enthusiasts to help in all different
    ways.
  develop-title: Develop.
  develop1: GitHub
  develop2: ' is the main place where code is collected, issues are documented, and discussions about code are had. Check out the '
  develop3: ' development tutorial'
  develop4: ' to get started, or '
  develop5: create your own library.
  document-title: Document.
  document1: ' Everyone loves documentation. Help is needed '
  document2: porting examples
  document3: ', and'
  document4: ' adding documentation'
  document5: ', and creating tutorials.'
  teach-title: Teach.
  teach1: ' Teach a workshop, a class, a friend, a collaborator! Tag @p5xjs on Twitter and we will do our best to share what you''re doing.'
  create-title: Create.
  create1: ' p5.js is looking for designers, artists, coders, programmers to bring your creative and amazing work to show on the front page and inspire other people. Submit your work to '
  create2: hello@p5js.org
  create3: .
  donate-title: Donate.
  donate1: ' p5.js is free and open source and made by artists. Help support the development of p5.js through a donation to the '
  donate2: Processing Foundation
  donate3: .
  contributors-conference-title: p5.js Contributors Conference
  contributors-conference1: >-
    While most work happens online, we also convene IRL. We've had two
    contributors conferences held at the
  contributors-conference2: >-
    at Carnegie Mellon University in Pittsburgh, PA. Artists, designers,
    developers, educators, and got together to advance the p5.js project.
  participants-title: Participants
  support-title: Support
  support1: Our contributor conference took place at the
  support2: >-
    at Carnegie Mellon University, an academic laboratory for atypical,
    anti-disciplinary, and inter-institutional research at the intersections of
    arts, science, technology, and culture.
  support3: This event was made possible by a grant from the
  support4: and generous support from the
  support5: and
  support6: Thank you!
  mailing-list-title: Mailing list
  mailing-list-1: >-
    Enter your email address to receive occasional updates from the Processing
    Foundation.
  2015contributors-conference-title: Contributors Conference 2015
  2015contributors-conference-date: May 25-31
  2015contributors-conference1: 'A group of approximately 30 participants gathered spent a week at the '
  2015contributors-conference2: >-
    , advancing the code, documentation, and community outreach tools of the
    p5.js programming environment. Participants came from as far away as Hong
    Kong, Seattle, Los Angeles, Boston and New York. Most were working
    professionals in the fields of creative technology, interaction design, and
    new-media arts, but the group also included a half-dozen undergraduate and
    graduate students from Carnegie Mellon’s Schools of Art and Architecture.
  2015contributors-conference3: Photos by Taeyoon Choi
  2015contributors-conference-diversity-title: Diversity
  2015contributors-conference-diversity1: >-
    Alongside technical development, one of the main focuses of this conference
    was outreach, community, and diversity. The conference began with a panel
  2015contributors-conference-diversity2: >-
    Diversity: Seven Voices on Race, Gender, Ability &amp; Class for FLOSS and
    the Internet
  2015contributors-conference-diversity3: '. '
  2015contributors-conference-diversity4: Organized by
  2015contributors-conference-diversity5: and
  2015contributors-conference-diversity6: ', '
  2015contributors-conference-diversity7: >-
    the panel took place Tuesday, 25 May 2015 in Kresge Auditorium at Carnegie
    Mellon University. Speakers included
  2015contributors-conference-diversity8: and
  2015contributors-conference-diversity9: .
  2015cc_1: Diverse group of participants smile and make a p5 sign with their hands
  2015cc_2: 'Participants jump, smile and throw their hands in the air on a green lawn'
  2015cc_3: Woman presenting the p5.js community statement from her laptop
  2015cc_4: >-
    Woman expressively speaks into a microphone while two male collaborators
    look on
  2015cc_5: Participants attentively smile and listen to a presentation
  2015cc_6: Woman reads about p5.js into a microphone to three female students
  2015cc_7: >-
    Participants sit in a circle around a white board with sticky notes on it
    while a female student speaks into a microphone
  2015cc_8: >-
    Participants sit around a table looking at each others laptops and compare
    code
  2015cc_9: Whiteboard with different colored sticky and written notes about programming
  2015cc_10: >-
    Woman speaking into a microphone about valuing different skill sets while a
    group of participants with laptops look at her powerpoint in a classroom
  2015cc_11: >-
    Woman speaks at a podium in an auditorium while three participants sit on
    the stage and another three are skyping in on the stage screen
  2015cc_12: Overhead view of a classroom with participants working on their laptops
  2015cc_13: Five people having a discussion in a circle
  2015cc_14: Five people in a circle with their laptops sharing their notes
  2015cc_15: Man in a classroom with a microphone speaking out to a group of participants
  2019contributors-conference-title: Contributors Conference 2019
  2019contributors-conference-date: August 13-18
  2019contributors-conference1: 'An interdisciplinary group of 35 participants gathered at the '
  2019contributors-conference2: >-
    , advancing the code, documentation, and community outreach tools and
    exploring the current landscape of the p5.js programming environment.
    Comprising a diverse range of participants within the fields of creative
    technology, interaction design, and new media arts, the conference was aimed
    at fostering dialogue through a multidisciplinary lens. Working groups
    focused on several topic areas: Access; Music and Code in Performance;
    Landscape of Creative Tech; and Internationalization.
  2019contributors-conference3: Videos by Qianqian Ye
  2019contributors-conference4: Photos by Jacquelyn Johnson
  outputs: Outputs
  output1: >-
    . An implementation of highly flexible triangle, square, hexagon, and
    octagon girds for p5.js. Created by Aren Davey.
  output2: >-
    . A set of template files for building a multi-device, multiplayer game
    where multiple clients can connect to a specified host page. Created by L05.
  output3: Experiments using
  output3-1: >-
    , testing early implementations of softCompile, OSC interfacing and added
    connectivity with demo for MIDI setup. A p5.js collaborative live-coding vj
    environment! Created by Ted Davis.
  output4: >-
    A panel on Blackness and Gender in Virtual Space led by American Artist,
    with shawné michaelain holloway and LaJuné McMillian.
  output5: Workshops led by Everest Pipkin and Jon Chambers.
  output6: 'A prototype of a '
  output6-1: notebook interface for p5.js.
  output6-2: Created by Allison Parrish.
  output7: >-
    New art installations by Stalgia Grigg, LaJuné McMillian, Aatish Bhatia, and
    Jon Chambers.
  output8: p5.js Global Contributor's Toolkit.
  output8-1: >-
    Created by Aarón Montoya-Moraga, Kenneth Lim, Guillermo Montecinos, Qianqian
    Ye,  Dorothy R. Santos, and Yasheng She.
  output9: How to write non-violent creative code.
  output9-1: ' A zine led by Olivia Ross.'
  output10: >-
    An overhaul of the p5.js website for accessibility. Including updates for
    screen reader accessibility, and improvements to the home, download, getting
    started, and reference pages. With contributions from Claire Kearney-Volpe,
    Sina Bahram, Kate Hollenbach, Olivia Ross, Luis Morales-Navarro, Lauren
    McCarthy, and Evelyn Masso.
  output11: >-
    Collaborative performances by Luisa Pereira, Jun Shern Chan, Shefali Nayak,
    Sona Lee, Ted Davis, and Carlos Garcia.
  output12: A performance by Natalie Braginsky.
  output13: >-
    A design of the p5.js library system for the p5 Editor. Created by Cassie
    Tarakajian and Luca Damasco.
  output14: >-
    Prototypes connecting p5 to other libraries. Created by Alex Yixuan Xu and
    Lauren Valley.
  output15: A closing campfire circle led by Golan Levin.
  2019cc_1: Man at a podium giving a presentation to the group
  2019cc_2: Participants sitting at a long table having lunch and a discussion
  2019cc_3: 'Participants in a classroom, some working on their laptops, others talking '
  2019cc_4: Classroom of participants working on their laptops
  2019cc_5: Participants in a meeting in a dark classroom
  2019cc_6: Woman giving presentation in a classroom of diverse participants
  2019cc_7: Participants conversing in a busy classroom
  2019cc_8: Woman with microphone speaking to fellow participants in a classroom
  2019cc_9: >-
    Participant speaks at a podium in front of projected text about the problem
    with anonymyzing data
  2019cc_10: >-
    Person with a microphone speaking to fellow participants in front of text
    that reads p5.js will not add any new features except those that increase
    access
  2019cc_11: 'Woman speaking into a microphone talking to fellow participants '
  2019cc_12: A man with a microphone speaking to fellow participants
  2019cc_13: Participants sit in a classroom towards the speakers listening intently
  2019cc_14: 'Classroom of participants facing a speaker listen intently '
  2019cc_15: >-
    Woman with microphone speaking to fellow participants with the text sacred
    boundaries in the projection behind her
  2019cc_16: >-
    Overhead view of participants listening to a panel of people with an image
    of a 3d rendered man on it
  2019cc_17: >-
    Participants sit around a table with their laptops and observe code on a
    screen
  2019cc_18: Woman sitting next to a lifesize teddy bear works on her laptop
  2019cc_19: Participants standing outside smiling
  2019cc_20: Four participants standing in a circle conversing
  2019cc_21: Participants sitting outside eating lunch together
  2019cc_22: >-
    Participants sitting around a large U shaped table looking towards the front
    of the classroom
  2019cc_23: >-
    Man sitting in front of the classroom speaking energetically into a
    microphone
  2019cc_24: >-
    Group photo of participants smiling enthusiastically with their hands in the
    air
  2019cc_25: Group of people sit around campfire made from four LCD monitors.
books:
  books-title: Books
  book-1-title: Aan de slag met p5.js
  book-1-authors: 'Lauren McCarthy, Casey Reas, and Ben Fry. Illustrations by Taeyoon Choi.'
  book-1-publisher: 'Published October 2015, Maker Media. '
  book-1-pages: '246 pages. '
  book-1-type: Paperback.
  book-1-description: >-
    Written by the lead p5.js developer and the founders of Processing, this
    book provides an introduction to the creative possibilities of today's Web,
    using JavaScript and HTML.
  book-1-order-a: Order Print/Ebook from O'Reilly
  book-1-order-b: Order from Amazon
  book-2-title: Introduction to p5.js (Spanish Edition)
  book-2-authors: >-
    Lauren McCarthy, Casey Reas, and Ben Fry. Translated by Aarón
    Montoya-Moraga. Ilustraciones de Taeyoon Choi.
  book-2-publisher: 'Published 2018, Processing Foundation, Inc. '
  book-2-pages: '246 pages. '
  book-2-type: Soft cover.
  book-2-description: >-
    Written by the lead p5.js developer and the founders of Processing, this
    book provides an introduction to the creative possibilities of today's Web,
    using JavaScript and HTML.
  book-2-order-a: Order the PDF from The Processing Foundation Press
  book-2-order-b: Order the physical version from Amazon
  book-3-title: Generative Design
  book-3-authors: 'Benedikt Gross, Hartmut Bohnacker, Julia Laub and Claudius Lazzeroni.'
  book-3-publisher: 'Published October 30, 2018, Princeton Architectural Press; Reprint edition. '
  book-3-pages: '255 pages. '
  book-3-type: Paperback.
  book-3-description: >-
    By using simple languages such as JavaScript in p5.js, artists and makers
    can create everything from interactive typography and textiles to 3D-printed
    furniture to complex and elegant infographics.
  book-3-order-a: Order from Princeton Architectural Press
  book-3-order-b: Order from Amazon
  book-4-title: Generative Gestaltung (German Edition)
  book-4-authors: 'Benedikt Gross, Hartmut Bohnacker, Julia Laub and Claudius Lazzeroni.'
  book-4-publisher: 'Published March 1, 2018, Schmidt Hermann Verlag. '
  book-4-pages: '256 pages. '
  book-4-type: Hardcover.
  book-4-description: >-
    By using simple languages such as JavaScript in p5.js, artists and makers
    can create everything from interactive typography and textiles to 3D-printed
    furniture to complex and elegant infographics.
  book-4-order-a: Order from Verlag Hermann Schmidt
  book-4-order-b: Order from Amazon
  book-5-title: Learn JavaScript with p5.js
  book-5-authors: Engin Arslan.
  book-5-publisher: 'Published 2018, Apress. '
  book-5-pages: '217 pages. '
  book-5-type: Paperback.
  book-5-description: >-
    Learn coding from scratch in a highly engaging and visual manner using the
    vastly popular JavaScript with the programming library p5.js. The skills you
    will acquire from this book are highly transferable to a myriad of
    industries and can be used towards building web applications, programmable
    robots, or generative art.
  book-5-order-a: Order from Apress
  book-5-order-b: Order from Amazon
  book-6-title: 'Aesthetic Programming: A Handbook of Software Studies'
  book-6-authors: 'Winnie Soon, Geoff Cox. '
  book-6-publisher: 'Published  2020, Open Humanities Press. '
  book-6-pages: '298 pages. '
  book-6-type: Hardcover.
  book-6-description: >-
    Using p5.js, this book introduces and demonstrates the reflexive practice 
    of aesthetic programming, engaging with learning to program as a way to 
    understand and question existing technological objects and paradigms,  and
    to explore the  potential for reprogramming wider eco-socio-technical
    systems.
  book-6-order-a: Download the PDF (FREE)
  book-6-order-b: Order from Barnes & Noble
examples:
  Examples: Voorbeelden
  back-examples: Terug naar voorbeelden
  Structure: Structuur
  Form: Vorm
  Data: Gegevens
  Arrays: Lijstjes
  Control: Besturing
  Image: Afbeelding
  Color: Kleur
  Math: Wiskunde
  Simulate: Simuleer
  Interaction: Interactie
  Objects: Objecten
  Lights: Ligten
  Motion: Beweging
  Instance_Mode: Instance Modus
  Dom: DOM
  Drawing: Tekenen
  Transform: Transform
  Typography: Typografie
  3D: 3D
  Input: Input
  Advanced_Data: Gegevens gevorderd
  Sound: Geluid
  Mobile: Mobiel
  Hello_P5: Hello p5
reference:
  Reference: Documentatie
showcase:
  showcase-title: Showcase
  showcase-intro1: 'Introducing Showcase, created by '
  showcase-intro2: ' in 2019 and currently curated by '
  showcase-intro3: >-
    We're celebrating how people are using p5.js to make creative work,
    learning, and open source more interesting and inclusive. Together, we make
    community. During Summer 2019, we asked a few creators to share more about
    how they've used p5.js through different projects and pieces.
  showcase-intro4: >-
    The Summer 2020 Showcase is now open for submissions, nominate someone's
    p5.js work or your own to be featured here!
  nominate-project: Nominate a Project
  showcase-featuring: Featuring
  project-tag-art: Art
  project-tag-design: Design
  project-tag-code: Code
  project-tag-curriculum: Curriculum
  project-tag-documentation: Documentation
  project-tag-game: Game
  project-tag-library: Library
  project-tag-organizing: Organizing
  project-tag-tool: Tool
  project-tag-tutorial: Tutorial
  project-roni: Programmed Plotter Drawings
  credit-roni: Roni Cantor
  description-roni: >-
    Sine waves and lerps generated in p5.js, exported as SVG, and drawn with a
    plotter and pens.
  project-phuong: Airi Flies
  credit-phuong: Phuong Ngo
  description-phuong: >-
    In this game developed with p5.play, help Airi fly by saying PEW. Created to
    encourage people to get out of their comfort zone and feel more confident
    about themselves regardless of what they do and how they look or sound.
  project-daein: Chillin'
  credit-daein: Dae In Chung
  description-daein: >-
    An interactive typographic poster that uses a mobile device's motion sensor
    with p5.js.
  project-qianqian: Qtv
  credit-qianqian: Qianqian Ye
  description-qianqian: >-
    A video channel with 1-minute videos in Mandarin about creative coding, art,
    and technology, including p5.js tutorials for beginners. Available on
    YouTube, Instagram, Bilibili, and TikTok.
  project-casey-louise: p5.js Shaders
  credit-casey-louise: 'Casey Conchinha, Louise Lessél'
  description-casey-louise: 'A resource for learning the what, why, and how of using shaders in p5.js.'
  project-moon-xin: Moving Responsive Posters
  credit-moon-xin: 'Moon Jang, Xin Xin, and students'
  description-moon-xin: >-
    Browser-based moving posters that use graphical systems, transformation
    methods, and p5.js to address the connotations of a word less than 8
    letters. Designed by students for a graphic design course (Visual Narrative
    Systems) at the University of Georgia.
  created-by: Created By
  pronouns-female: (she/her)
  creator-from-roni-cantor: 'From Toronto, Canada'
  project-links: Project Links
  project-links-text-1-roni-cantor: Example sketch in p5.js Web Editor
  project-links-text-2-roni-cantor: AxiDraw V3 demo video
  project-q-1-1: What are you up to?
  project-q-1-2: How did you get started with p5.js?
  project-a-1-1-roni-cantor: >-
    I just graduated from Ryerson University's New Media program. Coming from 4
    years of coding and making robots, I decided to take a break and play with
    some more traditional forms of art—while still coding and playing with
    robots.
  project-a-1-2-roni-cantor: 'I first started using p5.js at '
  project-a-1-3-roni-cantor: '! After using '
  project-a-1-4-roni-cantor: ' for many years, I wanted to try something new.'
  project-q-2: How did you use p5.js in this project?
  project-a-2-1-roni-cantor: >-
    I used p5.js in this project to generate the sine wave and lerp (linear
    interpolation) formulas and display the visuals in the
  project-a-2-2-roni-cantor: >-
    . I then used a feature in my code that exported my programmed graphic into
    an
  project-a-2-3-roni-cantor: ' file. I needed an SVG file to give to the plotter—an '
  project-a-2-4-roni-cantor: >-
    —so that it understood where to draw the lines that I programmed. I sent
    this information to the plotter with a program called
  project-a-2-5-roni-cantor: '!'
  project-q-3: What's your favorite p5.js feature?
  project-a-3-roni-cantor: ' because lines are fun and "lerp" is a fun word to say!'
  project-q-4: >-
    Did you face any challenges working on this project? If so, how did you
    overcome them?
  project-a-4-roni-cantor: >-
    It was my first time using p5.js, Inkscape, and a plotter! I really
    benefited from the people around me who had used p5 before, as well as
    online guides and forums.
  project-q-5: What's a cool thing we should check out?
  project-a-5-roni-cantor: ' on Instagram—super cool analog plotter stuff.'
  project-q-6: Where can people learn more about you?
  project-a-6-roni-cantor: ' (Instagram)'
  project-resources: Project Resources
  creator-from-qianqian: 'Los Angeles, California'
  interview-link-qianqian: Processing Foundation interview with Qianqian Ye
  project-a-1-1-qianqian: I am a Chinese artist and designer based in Los Angeles.
  project-a-1-2-qianqian: >-
    My partner introduced me to p5.js, which I learned mainly by watching free
    online video tutorials. My first p5.js project was drawing some shapes with
    different colors.
  project-a-2-1-qianqian: >-
    This project started with an idea of teaching my mom, who lives in China and
    doesn’t speak English, to code with p5.js. This project was difficult on
    multiple levels, and I wanted to start by identifying the main reasons why
    it’s more challenging for someone like my mother to learn to code—primarily
    due to the lack of free creative coding education resources. Most of the
    free resources to learn creative coding are unavailable in China. The p5.js
    tutorials on YouTube as well as the p5.js Twitter and Instagram accounts are
    inaccessible in China because of internet censorship.
  project-a-2-2-qianqian: 'I learned a lot from YouTube videos such as the '
  project-a-2-3-qianqian: >-
    , but the more I watched coding tutorials online, the more I realized how
    difficult it is to find other womxn and people of color teaching coding,
    especially in Mandarin. I wanted to help other Chinese womxn relate to
    creative coding.
  project-a-2-4-qianqian: >-
    I am working on opening up the video channels to other Chinese creatives who
    want to contribute to the educational resource together, like interviews and
    guest tutorials. If you are interested in teaching/talking about creative
    coding in Mandarin, HMU!
  project-a-3-1-qianqian: 'The '
  project-a-3-2-qianqian: ' is my favorite feature. It makes web-based creative coding seamless.'
  project-a-4-1-qianqian: >-
    Learning to code in a second language was difficult and the lack of
    community made this process even harder. I hope to speak from my experience
    as a beginner and someone who once felt like an outsider to the creative
    coding and video tutorial world.
  project-a-4-2-qianqian: >-
    I spend a lot of time researching the latest technology for my videos. In
    the end, I decided on using my phone to record and iMovie to edit. I hope to
    encourage others that it doesn’t take a lot of expensive gears to get
    started making instructional videos.
  project-a-4-3-qianqian: >-
    Another issue I came across was my own fear of putting myself online. I
    first had to get over my anxiety of making mistakes in the videos or
    receiving negative comments online. Often womxn and people of color are
    targets for online harassment. I’m hoping to help set an example for other
    womxn and people of color that it’s ok to put yourselves online and
    strengthen your communities by sharing your knowledge. Eventually, we will
    be able to stop online harassment by creating strong diverse communities.
  project-a-5-1-qianqian: 'I am very excited about '
  project-a-5-2-qianqian: ' in LA.'
  creator-from-phuong: 'From Kyiv, Ukraine'
  project-a-1-1-phuong: 'I''m a creative coder and designer, a '
  link-1-phuong: Play Airi Flies!
  link-2-phuong: Code for AiriFlies on GitHub
  link-3-phuong: More info in Phuong Ngo's portfolio
  project-a-1-2-phuong: ' diversity scholarship recipient, and just a curious creature.'
  project-a-1-3-phuong: >-
    I was taking a course at the School of Machines in Berlin this summer
    called! "
  project-a-1-4-phuong: '," mainly taught by '
  project-a-2-1-phuong: >-
    I used p5.js to work on the visual part of the game. The animation sprites
    for Airi and the ghosts were drawn on an iPad app called
  project-a-2-2-phuong: ' and then integrated into '
  project-a-2-3-phuong: ' code. I mainly used examples at p5.play as a reference.'
  project-a-2-4-phuong: 'For the endless scrolling background, I found a '
  p5-sketch-by-chjno-phuong: p5 sketch by chjno
  project-a-2-5-phuong: >-
    . I set a condition so whenever the word "pew" or a mouse click was
    detected, the scrolling speed would change to make an illusion of Airi
    flying up. When the user does not do anything, the scrolling speed is
    negative, which makes it look like Airi is falling down.
  project-a-2-6-phuong: 'For sound recognition, I used '
  project-a-2-7-phuong: ' (currently, there is a beta version not available in public yet, but it will be very soon!). I added around 120 samples of my classmates saying the word "pew" with different intonations and 80 samples of background noise to train it. Then I integrated the model into the game with '
  project-a-3-1-phuong: >-
    I really love how easily you can create, manipulate, and delete HTML blocks
    and classes with the
  project-a-3-2-phuong: ' via '
  project-a-3-3-phuong: ' etc. But my most favorite function is '
  project-a-3-4-phuong: ', since this is where you create magic.'
  project-a-4-1-phuong: >-
    There were a lot of challenges simply because p5.js was something new to me.
    I did not work much with JavaScript in general before. Reading documentation
    and searching for similar examples helped a lot.
  project-a-5-1-phuong: 'Check out '
  school-of-machines-phuong: School of Machines' courses
  project-a-5-2-phuong: >-
    ! They try hard to connect the most creative people in the world and they do
    it well so far. ❤️
  pronouns-male: (he/him)
  creator-from-chung: 'From Baltimore, Maryland'
  link-1-casey-louise: p5.js Shaders guide
  link-2-casey-louise: Glitch collection of p5.js shader examples
  link-1-chung: View Chillin'
  link-2-chung: Code for Chillin' on GitHub
  link-3-chung: More info in Dae In Chung's Portfolio
  project-a-1-1-chung: >-
    I am a graphic designer and a faculty member at Maryland Institute College
    of Art, where I mainly teach coding (with p5.js and Processing, of course)
    and motion graphics.
  project-a-1-2-chung: 'I have been using '
  project-a-1-3-chung: ' for some time, and when p5.js came along, I started using it without a second thought because it was easy to convert existing Processing code and share projects online.'
  project-a-2-1-chung: >-
    This summer, I gave myself a challenge of making typographic posters with
    coding, and this is one of the posters I made. I didn’t know until very
    recently that I could use motion sensor data with p5.js. I was also watching
  dan-shiffman-matterjs-tutorial: Dan Shiffman’s matter.js tutorial videos
  project-a-2-2-chung: ', so I thought why not combine the two and practice what I was learning?'
  project-a-3-1-chung: >-
    There are many things I love about p5.js such as the online community and
    beginner friendliness. What I really like right now is the
  project-a-3-2-chung: >-
    , with which I can not only work online for myself but also share URLs
    quickly in the present mode. For this project in particular, I had to do a
    lot of testing on my phone, and it was much easier and quicker than
    committing to GitHub.
  project-a-4-1-chung: 'I had some troubles with handling font, alpha channel and z-depth in '
  project-a-4-2-chung: ' mode. I am still not happy with all my decisions. But in general, it was helpful to search the forum and not to forget to break down problems into smaller ones and iterate little by little. Also, I had issues with rendering out video files directly out of p5.js. Screen recording was not an option because of intermittent frame rate drops (my laptop is pretty slow). After doing some research, I decided to learn some basics of '
  project-a-4-3-chung: ' and build a tool for myself.'
  project-a-5-1-chung: >-
    As mentioned above, if you want to render out frames and video files out of
    p5.js sketches, check out my
  project-a-5-2-chung: ' and let me know what you think.'
  creator-from-casey-louise: 'From New York, New York'
  project-a-1-1-casey-louise: >-
    Casey: I'm a student at NYU ITP who's interested in computer graphics and
    interactive spaces, physical and digital.
  project-a-1-2-casey-louise: >-
    Louise: I'm a student at NYU ITP who's interested in computer graphics and
    interactive spaces based on sensor technologies.
  project-a-1-3-casey-louise: >-
    Casey: I started learning p5.js in 2018 in my first semester at ITP, though
    I had been dabbling in
  project-a-1-4-casey-louise: ' since 2012. I was introduced to Processing by my friend Pedro while I was studying graphic design, and it blew my mind. The idea of making my own tools for creating graphics and interactive art piqued my interest, but once I actually tried it, I was hooked. The first project I can remember was an eye that followed you around the screen, and it was sad when you left it alone.'
  project-a-1-5-casey-louise: >-
    Louise: I initially learned p5.js to make a website I was creating more
    playful. I’m a C# programmer, so this was a good segway into JavaScript for
    me.
  project-a-2-1-casey-louise: >-
    Casey: I was putting off learning shaders for a long time, and I was also
    curious if I could use them in p5.js. Then I heard about a grant for open
    source, storytelling, and learning resource projects at ITP called
  project-a-2-2-casey-louise: >-
    . Since I wasn't finding much in the way of p5.js + shader documentation, I
    decided to figure out how they're implemented in p5.js and create a resource
    for others to learn. When I told Louise about the project, she was
    immediately excited about learning and teaching shaders in p5.js. She's been
    great about making sure the project is a learning resource and not just a
    collection of examples.
  project-a-3-1-casey-louise: 'Casey: Does '
  project-a-3-2-casey-louise: ' count as a feature? I also love having the ability to share my programs on the web so that people don''t have to install special software or come to NYC to see my work.'
  project-a-3-3-casey-louise: 'Louise: My favorite feature is '
  project-a-3-4-casey-louise: ' and '
  project-a-3-5-casey-louise: ' for transformation of the coordinate system to make generative visuals.'
  project-a-4-1-casey-louise: >-
    Casey: The beginning of the project (figuring out how things work) was us
    reaching out to amazing people, asking questions, and asking for permission
    to use their examples in our project.
  adam-ferris-repo-casey-louise: Adam Ferriss' GitHub repo
  project-a-4-2-casey-louise: ' really laid the groundwork for us in understanding how shaders work in p5.js and provided a framework of approachable examples for us to build on. For some specific p5.js-related issues we were having, we reached out to '
  project-a-4-3-casey-louise: ' and '
  project-a-4-4-casey-louise: ' (who worked on the '
  webgl-casey-louise: WebGL implementation in p5.js
  project-a-4-5-casey-louise: '), and they were super helpful.'
  project-a-4-6-casey-louise: >-
    Louise: The learning curve was pretty steep for getting shaders into p5.
    Luckily, there were some very well-documented examples on GitHub by Adam
    Ferriss. Our aim was to do so in a way that a complete beginner can
    understand how to implement it, so it was as much a technical challenge as
    it was a challenge in teaching code to strangers and beginners. Here we drew
    inspiration from the way the
  openframeworks-book-casey-louise: openFrameworks book
  project-a-4-7-casey-louise: ' is written. A fun "hey, it’s not hard and you can do it too" approach is what we believe in.'
  project-a-5-1-casey-louise: 'Check out the '
  project-a-5-2-casey-louise: ' to explore our peers'' amazing grant projects!'
  pronouns-nonbinary: (they/them)
  creator-from-moon: 'From Athens, Georgia'
  posters-by: Posters By
  project-a-1-1-moon: >-
    Moon: I'm a graphic designer, visual artist, and design educator. This
    summer, I taught a graphic design course in the University of Georgia
    Cortona program in Italy, introducing some basics of p5.js. This fall, I am
    planning to teach and to study digital platforms at UGA.
  project-a-1-2-moon: 'My former colleague, '
  project-a-1-3-moon: ', invited me to '
  project-a-1-4-moon: ' in '
  pcd-la-moon: LA in January 2019
  project-a-1-5-moon: >-
    . They helped me with the tools and logics of p5.js. It was an excellent
    teaching and learning experience.
  project-a-2-1-moon: 'We followed basic tutorials, '
  codetrain-moon: Daniel's videos on YouTube
  project-a-2-2-moon: ', and '
  p5-reference-moon: Reference on the p5.js website
  project-a-2-3-moon: .
  project-a-3-1-moon: 'My favorite function is related to '
  project-a-3-2-moon: ' and '
  project-a-3-3-moon: ': '
  project-a-3-4-moon: >-
    . I was able to use and to teach this tool to visualize various ideas about
    time in motion.
  project-a-4-1-moon: >-
    It was challenging for me, a beginner, to understand the overall structure
    of p5.js and how code works in general. I had to repeat the p5.js basics a
    couple of times, and then I drew a chart to memorize and to teach the way I
    understood the p5.js structure and code with strong constraints I set up. It
    was an excellent teaching and learning experience.
  project-a-5-1-moon: 'Check out the '
  project-a-5-2-moon: ' in Milan, Italy.'
teach:
  teach-title2: Teach
  teach-intro1: >-
    Every teaching has its own unique goals, messages, conditions, and
    environments. 
  teach-intro2: >-
    By documenting and sharing p5 workshops, classes, and materials, we hope to
    better connect the p5.js learner and educator communities around the world. 
  teach-intro3: Share or recommend
  teach-intro4: 'your own teaching experiences, too!'
  teach-heading: p5 Teaching Resources
  teach-search-filter: Search Filter
  teach-filter1: 'Diversity & Inclusion : '
  teach-filter1-label1: Gender
  teach-filter1-label2: Race & Ethnicity
  teach-filter1-label3: Language
  teach-filter1-label4: Neuro-Type
  teach-filter1-label5: Ability
  teach-filter1-label6: Class
  teach-filter1-label7: Religion
  teach-filter1-label8: (Sub-)Culture
  teach-filter1-label9: Political Opinion
  teach-filter1-label10: Age
  teach-filter1-label11: Skill Level
  teach-filter1-label12: Occupation
  teach-filter1-label13: '#noCodeSnobs'
  teach-filter1-label14: '#newKidLove'
  teach-filter1-label15: '#unassumeCore'
  teach-filter1-label16: '#BlackLivesMatter'
  teach-filter2: 'Venue : '
  teach-filter2-label1: Africa
  teach-filter2-label2: Asia
  teach-filter2-label3: Europe
  teach-filter2-label4: North America
  teach-filter2-label5: Oceania
  teach-filter2-label6: South America
  teach-filter2-label7: 'Virtual-Online '
  teach-filter3: 'Year : '
  teach-filter4: 'Level of Difficulty : '
  teach-filter4-label1: Elementary
  teach-filter4-label2: Intermediate
  teach-filter4-label3: Advanced
  teach-case-subtitle1: Venue & Date
  teach-case-subtitle2: Participants
  teach-case-subtitle3: Level of Difficulty
  teach-case-subtitle4: Goals
  teach-case-subtitle5: Method & Materials
  teach-case1-title: p5.js à l'Ubuntu Party!
  teach-case1-lead-name: Basile Pesin
  teach-case1-content1: '2020 Ubuntu Party '
  teach-case1-content1-1: 'Cité des Sciences et de l''Industrie, Paris, France'
  teach-case1-content2: 'Any age, including children and parents, young and older adults.'
  teach-case1-content3: Advanced
  teach-case1-content4: >-
    To introduce a new public to programming through fun and compelling
    examples. 
  teach-case1-content5: >-
    Method: in-person workshop, 1 hour per session, with different participant
    each times. The students were using (Ubuntu) machines with the p5.js web
    editor. I was teaching using a video projector as well as a board.
  teach-case1-content5-1: >-
    Materials: The exercises I gave where accessible through p5.js web-editor
    links available in 
  teach-case2-title: >-
    Making The Thing that Makes the Thing: Exploring Generative Art & Design
    with p5.js
  teach-case2-lead-name: Priti Pandurangan & Ajith Ranka
  teach-case2-image-alt: >-
    A group of participants collaborating to create some designs using the p5.js
    web editor on their laptops.
  teach-case2-content1: 'National Institute of Design, Bangalore'
  teach-case2-content1-1: '2020 February 8, 2:30-4:00 PM'
  teach-case2-content2: >-
    Our participants included art/design students & professionals, creative
    coding enthusiasts. We had close to 50 participants.
  teach-case2-content3: 'Priti: Intermediate & Ajith: Advanced'
  teach-case2-content4: >-
    To explore generative art &#x0026; design and recreate some classical works
    with p5.js. 
  teach-case2-content5: 'Methods: In-person, collaborative, hands-on workshop.'
  teach-case2-content5-1: 'Materials: '
  teach-case2-content5-2: 'course page '
  teach-case2-content5-3: 'linking to sketches on the p5 editor, '
  teach-case2-content5-4: 'interactive reference guide '
  teach-case2-content5-5: to p5 basics
  teach-case3-title: CC Fest (Creative Coding Festival)
  teach-case3-lead-name: Saber
  teach-case3-speech: 'Love p5.js. It has meant so much to me, my students, and this community.'
  teach-case3-content1: ' New York, Los Angeles, San Francisco, Virtual-Online '
  teach-case3-content1-1: ' Twice a year in NYC for four years; once a year in LA for three years; once a year in SF for two years; now virtual'
  teach-case3-content2: >-
    Our participants included art/design students & professionals, creative
    coding enthusiasts. We had close to 50 participants.
  teach-case3-content3: Intermediate
  teach-case3-content4: >-
    To build a teacher and student community around p5 for middle and high
    school.
  teach-case3-content5: >-
    A half-day of workshop led by volunteer teachers. We saw lots of different
    methods and materials. Most used some sort of slides or documentation, some
    live coding using an editor, with work time for participant to remix.
  teach-case3-content5-1: CC Fest Lessons page
  teach-case3-content5-2: ' for teaching materials'
  teach-case3-content5-3: More photos
  teach-case4-title: Taller Introducción a la Programación Creativa con p5.js
  teach-case4-lead-name: Aarón Montoya-Moraga
  teach-case4-image-alt: >-
    A group of 20 people sitting on a large shared table with their laptops
    looking at a projected screen.
  teach-case4-speech: 'p5.js is my happy place '
  teach-case4-content1: ' PlusCode Media Arts Festival, Buenos Aires, Argentina & Virtual-Online '
  teach-case4-content1-1: ' 2018 November 14, 3 hours'
  teach-case4-content2: >-
    I had around 16 students in the workshop, and a team including 3 people from
    the PlusCode festival, and one person at the venue.
  teach-case4-content3: 'Elementary, Intermediate, Advanced'
  teach-case4-content4: >-
    Introduction to beginners and artists of graphic web programming and open
    source, using p5.js, in Spanish :)
  teach-case4-content5: 'I used the material on this '
  teach-case4-content5-1: GitHub repo
  teach-case4-content5-2: ', we used the p5.js web editor, we had a three hour long workshop'
  teach-case4-content5-3: '+CODE electronic art festival 2018, Argentina'
  teach-case4-content5-4: ', Medium'
  teach-case5-title: Introduction to Generative Drawing
  teach-case5-lead-name: Adam Herst
  teach-case5-speech: >-
    My greatest source of uncertainty in developing the workshop was whether it
    was trying to teach art to programmers or to teach programming to artists.
  teach-case5-content1: Inter/Access
  teach-case5-content1-1: ' (artist-run centre), Toronto, Ontario, Canada'
  teach-case5-content1-2: In-person with a self-paced workbook for remote work
  teach-case5-content1-3: ' 2020 February 12, 7PM-9PM'
  teach-case5-content2: 15 artists
  teach-case5-content3: Elementary
  teach-case5-content4: >-
    To introduce p5.js to artists with little or no programming experience and
    to suggest one way an analogue practice can migrate to a digital form.
  teach-case5-content5: >-
    A printed workbook with activities that used the p5.js web editor to show
    how translate an physical drawing into a digital drawing.
  teach-case5-content5-1: 'Processing Community Day 2019: Generative Drawing at Inter/Access'
  teach-case5-content5-2: Introduction to Generative Drawing Letter PDF
  teach-case5-content5-3: Introduction to Generative Drawing Booklet PDF
  teach-case6-title: 'Open Lecture, Creative Coding: 2020'
  teach-case6-lead-name: Shunsuke Takawo
  teach-case6-image-alt: >-
    A table on which there is a laptop, some sheets of papers, colorful pens and
    two automatic machines drawing something with a pen on a sheet.
  teach-case6-speech: >-
    I love p5.js because it's so easy to read and write code in p5.js. Coding in
    your everyday life!
  teach-case6-content1: ' Kyoto University of Art and Design, Kyoto, Japan & Virtual-Online '
  teach-case6-content1-1: ' 2020 March 16-18, 1-7 PM'
  teach-case6-content2: 'Students of Kyoto University of Art and Design, and anyone.'
  teach-case6-content3: Elementary
  teach-case6-content4: Making code as a tool for artistic expression.
  teach-case6-content5: 'Dropbox Paper, p5.js web editor.'
  teach-case6-content5-1: Syllabus
  teach-case6-content5-2: Day 1
  teach-case6-content5-3: Day 2
  teach-case6-content5-4: Day 3
  teach-case6-content5-5: ', YouTube'
  teach-case7-title: Creative Coding for Static Graphics
  teach-case7-lead-name: Shunsuke Takawo
  teach-case7-speech: >-
    Coding in p5.js is a lot of fun. If you haven't started yet, I encourage you
    to give it a try!
  teach-case7-content1: ' FabCafe MTRL, Tokyo, Japan'
  teach-case7-content1-1: ' 2019 September 15, 4-7 PM '
  teach-case7-content2: Anyone who wants to try coding in p5.js.
  teach-case7-content3: Intermediate
  teach-case7-content4: To code from the graphic design's perspective.
  teach-case7-content5: 'Dropbox Paper, p5.js web editor.'
  teach-case7-content5-1: Syllabus & Material
  teach-case8-title: Generative Typography
  teach-case8-lead-name: Dae In Chung
  teach-case8-image-alt: >-
    A image with black background displaying the letter 'b' in 5 different
    styles along with a menu with various styling options to choose.
  teach-case8-content1: ' Baltimore, Maryland, USA & Virtual-Online '
  teach-case8-content1-1: ' 2019 January 21 - May 08, every Wednesday, 4-10 PM'
  teach-case8-content2: 14 undergrads and grad students who had little to no experience in coding.
  teach-case8-content3: Elementary
  teach-case8-content4: Experiment with typographic forms and structures through computation.
  teach-case8-content5: 'Methods: online/offline lectures and critiques.'
  teach-case8-content5-1: 'Materials: p5js online editor, Github, youtube tutorials.'
  teach-case8-content5-2: Works of participants
  teach-case9-title: Machine Learning for the Web
  teach-case9-lead-name: Yining Shi
  teach-case9-image-alt: >-
    A group of 16 people sitting around tables with their laptops, mobile phones
    and some other accessories, facing towards a large television screen.
  teach-case9-content1: ' ITP, NYU, 370 Jay St, Brooklyn, NY 11201, USA'
  teach-case9-content1-1: '2019 March 09 - October 12, every Tuesday, 6:30-9:00 PM'
  teach-case9-content2: >-
    Students at Interactive Telecommunications Program, New York University. 16
    people.
  teach-case9-content3: 'Elementary, Intermediate'
  teach-case9-content4: >-
    The goal of this class is to learn and understand common machine learning
    techniques and apply them to generate creative outputs in the browser using
    ml5.js and p5.js.
  teach-case9-content5: >-
    This class is a mix of lectures, coding sessions, group discussions, and
    presentations. I used 
  teach-case9-content5-1: GitHub
  teach-case9-content5-2: ' to host class syllabus and all the coding materials, Google Slides for lectures and p5.js Web Editor for live coding sessions. Every week, there were one-on-one office hours to talk about any difficulties of coming up with an idea for the homework or any coding changes.'
  teach-case9-content5-3: 'Methods: online/offline lectures and critiques.'
  teach-case10-title: Introduction to p5.js and JavaScript
  teach-case10-lead-name: Nico Reski
  teach-case10-content1: ' Currently available as self-study at own pace with accompanying slides, linked below.'
  teach-case10-content3: 'Beginner, Elementary'
  teach-case10-content4: >-
    Introduce learners (potentially with no coding experiences at all) to the
    very basics of p5.js (and JavaScript), in order to encourage creative coding
    and enable them to pursue own projects in a safe environment.
  teach-case10-content5: >-
    p5.js source code (for the introductory project), JavaScript source code
    (illustrating some basic JavaScript functionalities), accompanying slides in
    .pdf format, all hosted publicly on GitHub. 
  teach-case10-content5-1: Overview
  teach-case10-content5-2: ' of the workshop and its contents (including all links to the material hosted on GitHub) on my academic webpage.'
  teach-case11-title: Digital Weaving & Physical Computing Workshop Series
  teach-case11-lead-name: Qianqian Ye & Evelyn Masso
  teach-case11-image-alt: >-
    This image is divided in two parts. The left part shows a group of 15 women
    sitting on chairs with their laptops and looking at a presentor who is
    explaining a code on a projected screen. The right part of the image shows a
    person learning weaving using a physical pattern and a weaving tool.
  teach-case11-content1: ' Womens Center for Creative Work (WCCW), Los Angeles, CA, US'
  teach-case11-content1-1: ' 2019 October 19 - November 02, every Saturday 3-6 PM'
  teach-case11-content2: '15 women and non-binary artists, designer, makers, programers. '
  teach-case11-content3: Elementary
  teach-case11-content4: >-
    Over the course of three workshops, we will draw and create patterns using
    p5.js, an open-source graphical library; we will learn and apply
    computational concepts to transform patterns and finally, we will bring a
    weaving to life with electronic microcontrollers.
  teach-case11-content5: 'Methods: small team session'
  teach-case11-content5-1: >-
    Materials: slides, p5.js web editor, pen and paper to draw pattern, physical
    pattern weaving tool.
  teach-case11-content5-2: 'Workshop Slide #1'
  teach-case11-content5-3: 'Workshop Slide #2'
  teach-case11-content5-4: Workshop Information
  teach-case11-content5-5: ' on WCCW website.'
  teach-case12-title: Signing Coders
  teach-case12-lead-name: Taeyoon Choi
  teach-case12-image-alt: >-
    Two volunteers explaining concepts using a white board and a screen to a
    bunch of deaf and hard of hearing students, each student facing a computer
    screen.
  teach-case12-speech: >-
    I'm working on a new series of coding class for Disabled students in South
    Korea. I'm researching about the pedagogy and translation. I plan to hold
    workshops in December 2020. The project is supported by the Open Society
    Foundation Human Rights Initiative and Korea Disability Arts & Culture
    Center.
  teach-case12-content1: ' WRIC, New York City, USA & Seoul Museum of Art, Seoul, South Korea.'
  teach-case12-content1-1: '5 Sessions, each 2~3 hours'
  teach-case12-content2: Deaf and Hard of Hearing students age 10~50 who live in NYC.
  teach-case12-content3: Elementary
  teach-case12-content4: >-
    To help Deaf and Hard of Hearing students learn about computer programming
    through playful exercises. To make ASL tutorial of basic coding concepts.
  teach-case12-content5: >-
    We used p5.js Web editor and code examples on the website. We also used
    dice, playing cards and various paper tools to help students learn about
    coding concepts.
  teach-case12-content5-1: Syllabus & Material
  teach-case12-content5-2: More photos
